"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q-@wf0ssb)5o$a$5dj)hlj$p)vta6&n56@rlvwpuyit77+_x2z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'oauth2_provider',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'ipays',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
]
SITE_ID = 1
ROOT_URLCONF = 'core.urls'
OAUTH2_PROVIDER = {
    'ACCESS_TOKEN_EXPIRE_SECONDS': 36000,
    'AUTHORIZATION_CODE_EXPIRE_SECONDS': 600,
    'REFRESH_TOKEN_EXPIRE_SECONDS': 86400,
    'ROTATE_REFRESH_TOKEN': True,
    'CLIENT_ID_GENERATOR_CLASS': 'oauth2_provider.generators.ClientIdGenerator',
    'CLIENT_SECRET_GENERATOR_CLASS': 'oauth2_provider.generators.ClientSecretGenerator',
    'SCOPES': {
        'read': 'Read scope',
        'write': 'Write scope',
        'groups': 'Access to your groups'
    },
}
OAUTH2_INFO = {
    "client_id": "fRvKXIGhdS4VTrIXUhXWF7yjeOIPsocbHl0mYiIz",
    "client_secret": "EwpX0Ck1cgyBRAdngOG8Khia06XAFeHH91YCIFx4SRP0YHePQohQheDe5E72dyDauemwEWjOwBHor2WndKDOg7zZvJRX7qK2s0XLIE81hNmUcXxMCGmFlNMFYV8VnjQq"
}
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ipay',
        'USER': 'root',
        'PASSWORD': 'Pan123456!!',
        'HOST': 'localhost',  # Set to 'localhost' if the database is on the same machine
        'PORT': '3306',  # Set to '' for default
    },
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/
DATA_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024 * 30  # Max 30MB
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240   # higher than the count of fields
SESSION_EXPIRE_AT_BROWSER_CLOSE = True     # opional, as this will log you out when browser is closed
SESSION_COOKIE_AGE = 240 * 60                   # 0r 5 * 60, same thing
SESSION_SAVE_EVERY_REQUEST = True 
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Ho_Chi_Minh'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
DEBUG = True
#############################################################
# LOGGING
#############################################################
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[{asctime:22.22s} {levelname:3.3s} {name} {funcName} {lineno}]: {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'ipays': {
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'log/chat.log',
            'formatter': 'verbose',
            'encoding': 'utf8',
            'backupCount': 3,
            'maxBytes': 1024*1024*1024
        },
        'django-info': {
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'log/chat-info.log',
            'formatter': 'verbose',
            'level': 'INFO',
            'encoding': 'utf8',
            'backupCount': 3,
            'maxBytes': 1024*1024*1024
        },
        'django-debug': {
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'log/chat.log',
            'formatter': 'verbose',
            'encoding': 'utf8',
            'backupCount': 3,
            'maxBytes': 1024*1024*1024
        }
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django.utils.autoreload': {
            'level': 'INFO',
        },
        'django': {
            'handlers': ['django-debug', 'django-info'],
            'level': "DEBUG",
            'propagate': False,
        },
        'ipays': {
            'handlers': ['console', 'ipays'],
            'level': "DEBUG",
            'propagate': False,
        }
    },
}
